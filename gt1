import pygame
import random
import math
from pygame import mixer
# Initializing the pygame
pygame.init()

# create the screen
screen = pygame.display.set_mode((800, 600))

# background
background = pygame.image.load('marb.png')

# background music
# mixer.music.load('sans.mp3')
# mixer.music.play(-1)

# Title and Icon
pygame.display.set_caption("Heja BVB")
icon = pygame.image.load('bvb.png')
pygame.display.set_icon(icon)

# Player
playerpng = pygame.image.load('space-invaders (1).png')
playerX = 370
playerY = 480
playerX_change = 0
playerY_change = 0

# Enemy
enemypng = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []

num_of_enemies = 6
for i in range(num_of_enemies):
    enemypng.append(pygame.image.load('space_alien.png'))
    enemyX.append(random.randint(0, 735))
    enemyY.append(random.randint(50, 150))
    enemyX_change.append(0.3)
    enemyY_change.append(10)

# bullet, ready=bullet is present
bulletpng = pygame.image.load('bullets.png')
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 1
bullet_state = "ready"

score_value = 0
font = pygame.font.Font('fipps.otf',20)
textX=10
textY=10

# Game over font
over_font=pygame.font.Font('fipps.otf',64)

def show_score(x,y):
    score = font.render("SCORE: "+str(score_value),True, (0,0,0))
    screen.blit(score, (x, y))

def player(x,y):
    screen.blit(playerpng, (x, y))

def game_over_text():
    over_text=over_font.render("GAME OVER",True,(0,0,0))
    screen.blit(over_text, (125, 200))

def enemy(x, y, i):
    screen.blit(enemypng[i], (x, y))


def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletpng, (x + 15, y + 10))


def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt(math.pow(enemyX - bulletX, 2) + math.pow(enemyY - bulletY, 2))
    if distance < 27:
        return True
        enemyX_change.append(0.3)
    else:
        return False


# Game Loop
running = True
while running:

    # RGB
    screen.fill((250, 114, 104))

    # BG image
    screen.blit(background, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # if keystroke is pressed check whether its right or left
        if event.type == pygame.KEYDOWN:

            if event.key == pygame.K_LEFT:
                playerX_change = -0.2

            if event.key == pygame.K_RIGHT:
                playerX_change = +0.2

            if event.key == pygame.K_SPACE:
                if bullet_state is "ready":
                    bullet_sound=mixer.Sound('laser.wav')
                    bullet_sound.play()
                    bulletX = playerX
                    fire_bullet(bulletX, bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0
                playerY_change = 0
    # Boundaries
    playerX += playerX_change
    if playerX < 0:
        playerX = 0
    elif playerX > 736:
        playerX = 736
    playerY += playerY_change
    if playerY < 0:
        playerY = 0
    elif playerY > 536:
        playerY = 536
    # enemy movement
    for i in range(num_of_enemies):
        if enemyY[i] > 450:
            for j in range(num_of_enemies):
                enemyY[j] = 2000
            game_over_text()
            break

        enemyX[i] += enemyX_change[i]
        if enemyX[i] <= 0:
            enemyX_change[i] = 0.5
            enemyY[i] += enemyY_change[i]
        elif enemyX[i] >= 736:
            enemyX_change[i] = -0.5
            enemyY[i] += enemyY_change[i]
        # Collision
        collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
        if collision:
            collision_sound = mixer.Sound('minecraft.wav')
            collision_sound.play()
            bulletY = 480
            bullet_state = "ready"
            score_value += 1
            enemyX[i] = random.randint(0, 735)
            enemyY[i] = random.randint(50, 150)
        enemy(enemyX[i], enemyY[i], i)

    # bullet movement
    if bulletY <= 0:
        bulletY = 480
        bullet_state = "ready"
    if bullet_state is "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bulletY_change


    player(playerX, playerY)
    show_score(textX,textY)
    pygame.display.update()
